"""
Django settings for vpssite project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'LRnK8134t9BLorH61A7vrJrIW0vYHdk6Q9iFjLfIt0ml3BkBWr1s9uoSPdc3p0q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # В продакшене поменять на False

ALLOWED_HOSTS = ['localhost', '127.0.0.1']  # В продакшене указать реальные хосты


# Application definition

INSTALLED_APPS = [
    'vps',
    'crispy_forms',
    'user',
    'accounts',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'panel',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Отвечает за авторизацию и сессии
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vpssite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Тут хранятся кастомные шаблоны
        'APP_DIRS': True,  # Чтобы искать шаблоны в папках приложений
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  # Чтобы в шаблонах был объект request
                'django.contrib.auth.context_processors.auth', # Чтобы в шаблонах был доступ к user
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vpssite.wsgi.application'


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'admin_vps',
        'USER': 'admin_vps',
        'PASSWORD': 'DJewjEfekjKwleFPlkj',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 8},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Custom user model (используем свою модель вместо стандартной User)
AUTH_USER_MODEL = 'accounts.TLUser'


# Authentication backends: сначала кастомный по email или телефону, потом дефолтный для админки
AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailOrPhoneBackend',
    'django.contrib.auth.backends.ModelBackend',
]


# Email backend — для разработки выводит письма в консоль
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Настройки для реального SMTP (раскомментировать и заполнить в продакшене)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.example.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your-email@example.com'
# EMAIL_HOST_PASSWORD = 'your-email-password'
# DEFAULT_FROM_EMAIL = 'webmaster@yourdomain.com'


# Безопасность — включить в продакшене
SESSION_COOKIE_SECURE = False  # True в проде (только HTTPS)
CSRF_COOKIE_SECURE = False     # True в проде
SECURE_SSL_REDIRECT = False    # True в проде (все HTTP на HTTPS)
SECURE_BROWSER_XSS_FILTER = False  # True в проде
SECURE_CONTENT_TYPE_NOSNIFF = False  # True в проде
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # True если нужно, чтобы сессия сбрасывалась при закрытии браузера


# URL-адреса для авторизации и редиректов
LOGIN_URL = '/accounts/login/'              # Если пользователь не авторизован, @login_required отправит сюда
LOGIN_REDIRECT_URL = '/profile/'             # После успешного логина — сюда
LOGOUT_REDIRECT_URL = '/accounts/login/'    # После выхода — сюда


# Настройки Crispy Forms
CRISPY_TEMPLATE_PACK = 'bootstrap4'


# Google reCAPTCHA keys (тестовые)
RECAPTCHA_PUBLIC_KEY = '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI'
RECAPTCHA_PRIVATE_KEY = '6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe'


# Флаг включения аутентификации и регистрации (можно выключать при необходимости)
AUTH_SYSTEM_ENABLED = True
